// <auto-generated />
using System;
using CSO2.Database.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSO2.Database.Core.Migrations.MySQL
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20220908024038_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSO2.Database.Core.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("CashPoints")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("GamePoints")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MPoints")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.IGN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IGN");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("CurrExp")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.HasIndex("UserId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("LowerExp")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UpperExp")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Rank");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLoggedIn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LoginFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.Currency", b =>
                {
                    b.HasOne("CSO2.Database.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.IGN", b =>
                {
                    b.HasOne("CSO2.Database.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSO2.Database.Core.Models.Level", b =>
                {
                    b.HasOne("CSO2.Database.Core.Models.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSO2.Database.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rank");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
